name: Build and Test

on: [push, pull_request]

jobs:
    crypto:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: "recursive"
            #sudo apt-get install build-essential cmake libgmp-dev libsodium-dev nasm curl m4
            #sudo apt-get install nlohmann-json3-dev
            - name: install requirements
              uses: awalsh128/cache-apt-pkgs-action@v1
              with:
                  packages: build-essential cmake m4 nasm nlohmann-json3-dev libgmp-dev
                  version: 1.0
            - name: download rapidsnark
              run: |
                  cd crypto
                  git clone https://github.com/vivianjeng/rapidsnark.git
            - name: build gmp for Linux x86_64
              run: |
                  cd crypto/rapidsnark
                  git submodule init
                  git submodule update
                  if [[ ! -d "depends/gmp/package" ]]; then ./build_gmp.sh host; fi
            - name: Build prover Linux
              run: |
                  cd crypto/rapidsnark
                  mkdir -p build_prover && cd build_prover
                  cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../package
                  make -j4 && make install
            # - name: Install circom
            #   run: |
            #       sudo wget -O /usr/bin/circom https://github.com/iden3/circom/releases/download/v2.1.9/circom-linux-amd64
            #       sudo chmod +x /usr/bin/circom
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
            # - name: Install snarkjs
            #   run: npm install -g snarkjs
            - name: Install dependencies
              run: |
                  cd crypto
                  npm install
            - name: Build circuits
              run: |
                  cd crypto
                  ./scripts/benchmark.sh
            - name: Run tests
              run: |
                  cd crypto
                  npm test
    ddh:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Build
              run: |
                  cd crypto-ddh
                  ./autogen.sh
                  ./configure
                  make
            - name: Test
              run: |
                  cd crypto-ddh
                  ./tests
            - name: Run benchmark
              run: |
                  cd crypto-ddh
                  ./benchmark.sh
